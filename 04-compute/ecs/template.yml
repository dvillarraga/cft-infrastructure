AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  AppTag:
    Type: String
    Default: 'ecs-app'

Resources:
  
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: ecs-cluster
  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: ecs-cluster-log-group
  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ecs-execution-role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: 'ecssecuritygroup'
      GroupDescription: 'ECS Security Group'
      VpcId: !ImportValue 'vpc-VPCID'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  
  ECSTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: ecs-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ECSExecutionRole
      ContainerDefinitions:
        - Name: deployment-example-container
          Image: nginx:1.17.7
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref ECSLogGroup
              awslogs-stream-prefix: ecs
      RequiresCompatibilities:
        - EC2
        - FARGATE
  
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: deployment-example-service
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref ECSTask
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !ImportValue 'vpc-PublicSubnet1'
            - !ImportValue 'vpc-PublicSubnet2'
          SecurityGroups:
            - !GetAtt ECSSecurityGroup.GroupId

Outputs:
  
  ECSSecurityGroup:
    Description: ECS Security Group
    Value: !Ref ECSSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-ECSSG"